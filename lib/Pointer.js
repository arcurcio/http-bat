'use strict';
var yaml = require('js-yaml');
var _ = require('lodash');
exports.type = new yaml.Type('tag:yaml.org,2002:variable', {
    kind: 'scalar',
    resolve: resolvePointer,
    construct: constructVariable,
    instanceOf: Pointer
});
function createSchema() {
    return yaml.Schema.create([module.exports.type]);
}
exports.createSchema = createSchema;
var Pointer = (function () {
    function Pointer(path) {
        this.path = path;
    }
    Pointer.prototype.set = function (object, value) {
        _.set(object, this.path, value);
    };
    Pointer.prototype.get = function (object) {
        return _.get(object, this.path);
    };
    return Pointer;
}());
exports.Pointer = Pointer;
// ---
function constructVariable(data) {
    return new Pointer(data);
}
function resolvePointer(data) {
    return (typeof data === 'string');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBvaW50ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ2hDLElBQU8sQ0FBQyxXQUFXLFFBQVEsQ0FBQyxDQUFDO0FBRWhCLFlBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsNEJBQTRCLEVBQUU7SUFDOUQsSUFBSSxFQUFFLFFBQVE7SUFDZCxPQUFPLEVBQUUsY0FBYztJQUN2QixTQUFTLEVBQUUsaUJBQWlCO0lBQzVCLFVBQVUsRUFBRSxPQUFPO0NBQ3BCLENBQUMsQ0FBQztBQUVIO0lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ25ELENBQUM7QUFGZSxvQkFBWSxlQUUzQixDQUFBO0FBRUQ7SUFDRSxpQkFBbUIsSUFBWTtRQUFaLFNBQUksR0FBSixJQUFJLENBQVE7SUFFL0IsQ0FBQztJQUVELHFCQUFHLEdBQUgsVUFBSSxNQUFXLEVBQUUsS0FBVTtRQUN6QixDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxxQkFBRyxHQUFILFVBQUksTUFBVztRQUNiLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUNILGNBQUM7QUFBRCxDQUFDLEFBWkQsSUFZQztBQVpZLGVBQU8sVUFZbkIsQ0FBQTtBQUVELE1BQU07QUFFTiwyQkFBMkIsSUFBSTtJQUM3QixNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0IsQ0FBQztBQUdELHdCQUF3QixJQUFJO0lBQzFCLE1BQU0sQ0FBQyxDQUFDLE9BQU8sSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDO0FBQ3BDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHlhbWwgPSByZXF1aXJlKCdqcy15YW1sJyk7XG5pbXBvcnQgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG5leHBvcnQgY29uc3QgdHlwZSA9IG5ldyB5YW1sLlR5cGUoJ3RhZzp5YW1sLm9yZywyMDAyOnZhcmlhYmxlJywge1xuICBraW5kOiAnc2NhbGFyJyxcbiAgcmVzb2x2ZTogcmVzb2x2ZVBvaW50ZXIsXG4gIGNvbnN0cnVjdDogY29uc3RydWN0VmFyaWFibGUsXG4gIGluc3RhbmNlT2Y6IFBvaW50ZXJcbn0pO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2NoZW1hKCkge1xuICByZXR1cm4geWFtbC5TY2hlbWEuY3JlYXRlKFttb2R1bGUuZXhwb3J0cy50eXBlXSk7XG59XG5cbmV4cG9ydCBjbGFzcyBQb2ludGVyIHtcbiAgY29uc3RydWN0b3IocHVibGljIHBhdGg6IHN0cmluZykge1xuXG4gIH1cblxuICBzZXQob2JqZWN0OiBhbnksIHZhbHVlOiBhbnkpIHtcbiAgICBfLnNldChvYmplY3QsIHRoaXMucGF0aCwgdmFsdWUpO1xuICB9XG5cbiAgZ2V0KG9iamVjdDogYW55KSB7XG4gICAgcmV0dXJuIF8uZ2V0KG9iamVjdCwgdGhpcy5wYXRoKTtcbiAgfVxufVxuXG4vLyAtLS1cblxuZnVuY3Rpb24gY29uc3RydWN0VmFyaWFibGUoZGF0YSkge1xuICByZXR1cm4gbmV3IFBvaW50ZXIoZGF0YSk7XG59XG5cblxuZnVuY3Rpb24gcmVzb2x2ZVBvaW50ZXIoZGF0YSkge1xuICByZXR1cm4gKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJyk7XG59XG4iXX0=